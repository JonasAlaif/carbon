field f: Int
field g: Int

predicate p1(a:Ref) {
	acc(a.f)
}


predicate p2(a:Ref, b:Int) {
	acc(a.g)
}

method m1(a:Ref, b:Int)
//requires forall x:Int :: x > 0 ==> acc(p2(a, x))
//requires b > 0
//ensures forall x:Int :: x > 0 ==> acc(p2(a, x))
{
	var c:Int := 2
	inhale forall x:Int :: x > 0 ==> acc(p2(a, x))
	assert(c == 2)
	exhale forall x:Int :: x > 0 ==> acc(p2(a, x))
}