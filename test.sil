field f: Int

predicate h(a:Ref) {
	acc(a.f)
}


method test01(xs: Set[Ref], ys: Seq[Ref])
  requires forall x: Ref :: x in xs ==> acc(h(x))
  requires forall i: Int :: i in [0..|ys|) ==> acc(h(ys[i]))
  ensures forall x: Ref :: x in xs ==> acc(h(x))
{}
