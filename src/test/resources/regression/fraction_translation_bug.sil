field f: Int;

/*bug in Carbon since 1/3 is translated to 0.333333333, hence the assertion in test01 is proved to be correct (even though isn't) 
and assertion isn't proved to be correct (even though it is)

the origin of the bug in general is the translation of fractions in Silver to a decimal represented by a finite number of digits in Boogie
*/  


method test01(x: Ref) {
  var p: Perm
  p := 1/3
  assert p+p+p == 1/1 //failed to verify in previous version
}

method test02(x: Ref) 
requires acc(x.f,1/3)
{
  var p: Perm
  p := 1/3
  assert p+p+p == 999999999/1000000000 //wrongly verified in previous version
}
