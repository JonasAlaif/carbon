
method t1(x: Int, xs: Seq[Int]) {
    var n: Seq[Int] := Seq()
    assert |n| == 0
    assert n != Seq(x)
    assert |Seq(1)| == 1
}

method t2() {
    assert 1 in Seq(1,2,3)
    assert |[-1..10)| == 11
    assert Seq(1) ++ Seq(2) == Seq(1,2)

    var a: Seq[Int] := Seq(0,1,-11,22)
    assert a[2] == -11

    assert a[..1] == Seq(0)
    assert a[1..] == Seq(1,-11,22)
    assert a[1..2] == Seq(1)

    assert a[1 := 22] == (a[1 := -1][1 := 22])
    assert a[1 := 22] == Seq(0,22,-11,22)
}
